name: Foodgram workflow

on:
  push:
    branches: [ "master" ]

jobs:
  tests:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd backend/
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt
          
      - name: Test the code for PEP8 compliance
        run: |
          python -m flake8

  build_backend_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-22.04
      needs: tests

      steps:
        - name: Check out the repository
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v3
          with:
            file: ./backend/Dockerfile
            context: ./backend
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  deploy:
    runs-on: ubuntu-20.04
    needs: build_backend_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker system prune -f
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} > .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SITE_DOMAIN=${{ secrets.SITE_DOMAIN }} >> .env
            sudo docker-compose up -d
  
  send_message:
    runs-on: ubuntu-22.04
    needs: deploy
    
    steps:
      - name: Send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
